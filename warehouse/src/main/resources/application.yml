server:
  port: 8081
spring:
  application:
    name: "warehouse-service"
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/warehouse}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
# Micrometer Tracing Configuration
management:
  tracing:
    sampling:
      probability: 1.0  # Sample 100% for testing
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health,info,metrics,httptrace

# Logging pattern to include trace IDs
logging:
  pattern:
    level: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId:-},%X{spanId:-}] %-5level %logger{36} - %msg%n"
  level:
    io.micrometer.tracing: DEBUG  # Enable tracing debug logs
# OpenTelemetry configuration
#otel:
#  service:
#    name: ${spring.application.name}
#  exporter:
#    zipkin:
#      endpoint: http://localhost:9411/api/v2/spans  # Adjust for your Podman setup
#  traces:
#    exporter: zipkin
#  metric:
#    export-interval: 10s
#  resource:
#    attributes:
#      service.name: ${spring.application.name}
#      service.version: 1.0.0
#
## Enable all actuator endpoints for debugging
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  tracing:
#    sampling:
#      probability: 1.0  # Sample 100% for testing
